//
//  MTKitTests32.m
//  MTKit
//
//  Created by Ryusuke SEKIYAMA on 11/10/06.
//  Copyright (c) 2011 Ryusuke SEKIYAMA All rights reserved.
//

#import "MTKitTests32.h"

@implementation MTKitTests32
#if !__LP64__

- (void)assertFloatEquals:(CGFloat)actual expected:(CGFloat)expected
{
    STAssertEqualsWithAccuracy(actual, expected, 0.0000001, @"not equal");
}

- (void)testGenerate
{
    TinyMT *random = [self random];
    NSUInteger expected[50] = {
        2545341989U,  981918433U, 3715302833U, 2387538352U, 3591001365U,
        3820442102U, 2114400566U, 2196103051U, 2783359912U,  764534509U,
         643179475U, 1822416315U,  881558334U, 4207026366U, 3690273640U,
        3240535687U, 2921447122U, 3984931427U, 4092394160U,   44209675U,
        2188315343U, 2908663843U, 1834519336U, 3774670961U, 3019990707U,
        4065554902U, 1239765502U, 4035716197U, 3412127188U,  552822483U,
         161364450U,  353727785U,  140085994U,  149132008U, 2547770827U,
        4064042525U, 4078297538U, 2057335507U,  622384752U, 2041665899U,
        2193913817U, 1080849512U,   33160901U,  662956935U,  642999063U,
        3384709977U, 1723175122U, 3866752252U,  521822317U, 2292524454U
    };
    for (int i = 0; i < 50; i++) {
        [self assertUIntegerEquals:[random generate] expected:expected[i]];
    }
}

- (void)testGenerateFloat
{
    TinyMT *random = [self randomByArray];
    CGFloat expected[50] = {
        0.0132459, 0.2083900, 0.1457998, 0.1144078, 0.6173239,
        0.0522397, 0.9873815, 0.1503185, 0.4039059, 0.6909349,
        0.0908061, 0.0637298, 0.5002119, 0.1056944, 0.0936889,
        0.0609042, 0.0725737, 0.7802557, 0.8761557, 0.5714423,
        0.1706455, 0.4046336, 0.4131218, 0.2825145, 0.8249400,
        0.4180385, 0.2152816, 0.4346161, 0.4916836, 0.5997444,
        0.9118823, 0.1928336, 0.7523277, 0.9890286, 0.7421532,
        0.9053972, 0.3542483, 0.9161059, 0.1209783, 0.8205475,
        0.8592416, 0.8379903, 0.6638085, 0.8796422, 0.8608698,
        0.9255103, 0.6475282, 0.7260163, 0.8757524, 0.0845953
    };
    for (int i = 0; i < 50; i++) {
        [self assertFloatEquals:[random generateFloat] expected:expected[i]];
    }
}

- (void)testGenerateFloat12
{
    TinyMT *random = [self randomByArray];
    CGFloat expected[50] = {
        1.6180767, 1.8378111, 1.7666160, 1.2583882, 1.6962934,
        1.6468527, 1.8065972, 1.5554585, 1.4074975, 1.0875973,
        1.9197918, 1.4574956, 1.6669209, 1.8137155, 1.3395888,
        1.7431080, 1.0419986, 1.7254776, 1.8457749, 1.7100438,
        1.9055752, 1.1819330, 1.8549275, 1.9305544, 1.1244931,
        1.2847148, 1.8663290, 1.4107596, 1.1664802, 1.1365448,
        1.4102769, 1.9013107, 1.9665589, 1.2195582, 1.7036947,
        1.3244984, 1.3074670, 1.4314530, 1.3307399, 1.4553448,
        1.2322005, 1.3248408, 1.6282554, 1.6237093, 1.9553823,
        1.2515985, 1.2902025, 1.8261194, 1.7116343, 1.0828516
    };
    for (int j = 0; j < 50; j++) {
        [random nextState];
    }
    for (int i = 0; i < 50; i++) {
        [self assertFloatEquals:[random generateFloat12] expected:expected[i]];
    }
}

- (void)testGenerateFloatOC
{
    TinyMT *random = [self randomByArray];
    CGFloat expected[50] = {
        0.4334422, 0.1254190, 0.9491148, 0.7561387, 0.5671672,
        0.8243424, 0.0393196, 0.3985790, 0.4224766, 0.6121918,
        0.5195524, 0.0341858, 0.3006201, 0.9415597, 0.1908746,
        0.6455914, 0.9965364, 0.3110815, 0.4033393, 0.9034473,
        0.0202459, 0.6251086, 0.2076811, 0.1991719, 0.0160369,
        0.5703403, 0.8151198, 0.9348063, 0.9298606, 0.6834633,
        0.2357913, 0.6382589, 0.0393692, 0.4783188, 0.4688578,
        0.2675911, 0.4227386, 0.2752262, 0.7581965, 0.3906184,
        0.6015150, 0.4173800, 0.2261215, 0.5006371, 0.2059622,
        0.1784127, 0.4403929, 0.5902822, 0.2307619, 0.4184512
    };
    for (int j = 0; j < 100; j++) {
        [random nextState];
    }
    for (int i = 0; i < 50; i++) {
        [self assertFloatEquals:[random generateFloatOC] expected:expected[i]];
    }
}

- (void)testGenerateFloatOO
{
    TinyMT *random = [self randomByArray];
    CGFloat expected[50] = {
        0.7539235, 0.5481223, 0.0172182, 0.3837644, 0.5756599,
        0.1929101, 0.6351088, 0.1388987, 0.2030107, 0.5359520,
        0.7981051, 0.8822426, 0.5865937, 0.9584194, 0.9073082,
        0.6073984, 0.8127722, 0.7480494, 0.9829172, 0.6296896,
        0.2040328, 0.0169488, 0.5349101, 0.7498616, 0.4206887,
        0.4468912, 0.6781071, 0.5027536, 0.4000009, 0.2352458,
        0.3784646, 0.8087858, 0.3579344, 0.6030601, 0.2197810,
        0.9718446, 0.5287687, 0.7941138, 0.9504710, 0.3413824,
        0.1003662, 0.8295220, 0.6224557, 0.9157780, 0.4195939,
        0.2126821, 0.8094529, 0.1176151, 0.1643153, 0.2755433
    };
    for (int j = 0; j < 200; j++) {
        [random nextState];
    }
    for (int i = 0; i < 50; i++) {
        [self assertFloatEquals:[random generateFloatOO] expected:expected[i]];
    }
}

#endif
@end
